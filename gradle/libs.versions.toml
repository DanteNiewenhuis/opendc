[versions]
classgraph = "4.8.138"
clikt = "3.3.0"
config = "1.4.1"
commons-math3 = "3.6.1"
hadoop = "3.3.1"
jackson = "2.13.1"
junit-jupiter = "5.8.2"
junit-platform = "1.8.2"
kotlin-logging = "2.1.21"
kotlinx-coroutines = "1.6.0"
ktor = "1.6.7"
log4j = "2.17.1"
mockk = "1.12.2"
opentelemetry-main = "1.6.0"
opentelemetry-metrics = "1.6.0-alpha"
opentelemetry-semconv = "1.6.0-alpha"
parquet = "1.12.2"
progressbar = "0.9.2"
sentry = "5.5.2"
slf4j = "1.7.32"

[libraries]
# Kotlin
kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }

# Logging
kotlin-logging = { module = "io.github.microutils:kotlin-logging", version.ref = "kotlin-logging" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }
log4j-slf4j = { module = "org.apache.logging.log4j:log4j-slf4j-impl", version.ref = "log4j" }
sentry-log4j2 = { module = "io.sentry:sentry-log4j2", version.ref = "sentry" }

# Telemetry
opentelemetry-api-main = { module = "io.opentelemetry:opentelemetry-api", version.ref = "opentelemetry-main" }
opentelemetry-sdk-main = { module = "io.opentelemetry:opentelemetry-sdk", version.ref = "opentelemetry-main" }
opentelemetry-api-metrics = { module = "io.opentelemetry:opentelemetry-api-metrics", version.ref = "opentelemetry-metrics" }
opentelemetry-sdk-metrics = { module = "io.opentelemetry:opentelemetry-sdk-metrics", version.ref = "opentelemetry-metrics" }
opentelemetry-semconv = { module = "io.opentelemetry:opentelemetry-semconv", version.ref = "opentelemetry-semconv" }

# Testing
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit-jupiter" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit-jupiter" }
junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit-jupiter" }
junit-platform-commons = { module = "org.junit.platform:junit-platform-commons", version.ref = "junit-platform" }
junit-platform-engine = { module = "org.junit.platform:junit-platform-engine", version.ref = "junit-platform" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }

# CLI
clikt = { module = "com.github.ajalt.clikt:clikt", version.ref = "clikt" }
progressbar = { module = "me.tongfei:progressbar", version.ref = "progressbar" }

# Format
jackson-core = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "jackson" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }
jackson-datatype-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jackson" }
jackson-dataformat-csv = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-csv", version.ref = "jackson" }
parquet = { module = "org.apache.parquet:parquet-avro", version.ref = "parquet" }
config = { module = "com.typesafe:config", version.ref = "config" }

# HTTP client
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-client-jackson = { module = "io.ktor:ktor-client-jackson", version.ref = "ktor" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }

# Other
classgraph = { module = "io.github.classgraph:classgraph", version.ref = "classgraph" }
hadoop-common = { module = "org.apache.hadoop:hadoop-common", version.ref = "hadoop" }
hadoop-mapreduce-client-core = { module = "org.apache.hadoop:hadoop-mapreduce-client-core", version.ref = "hadoop" }
commons-math3 = { module = "org.apache.commons:commons-math3", version.ref = "commons-math3" }
